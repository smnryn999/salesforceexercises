<!DOCTYPE html>
<html lang="tr">

<head>
  <meta charset="UTF-8">
  <title>LWC Communications</title>
  <link rel="stylesheet" href="../test.css">
</head>

<body>
  <header>
    <h1>LWC Communications</h1>
  </header>

  <section>

    <!-- EXAMPLE 1 -->
    <div class="example">
      <p><span class="counter"></span> - What is LWC? </p>
      <button class="showSolution">Show Solution</button>
      <pre>
        <span class="string">
        • Lightning Web Components (LWC) are custom HTML elements built using HTML and modern JavaScript.
        • Lightning Web Components (LWC) uses core Web Components standards and provides only what’s necessary to perform well in browsers supported by Salesforce. Because it’s built on code that runs natively in browsers, Lightning Web Components is lightweight and delivers exceptional performance. Most of the code you write is standard JavaScript and HTML.
        • Lightning Web Components (LWC) are a fundamental building block in Salesforce's Lightning Platform for building user interface (UI).
        </span>
      </pre>
    </div>

    <!-- EXAMPLE 2 -->
    <div class="example">
      <p><span class="counter"></span> - Please create an example sending data from a parent component to a child component.</p>
      <button class="showSolution">Show Solution</button>
      <pre>
        <em> // In Lightning Web Components (LWC), ww can pass data from a parent component to a child component by using component attributes. </em>
        
        <em> &lt;!-- parentComponent.html --> </em>
        <div><code>
        &lt;!-- parentComponent.html -->
        &lt;template>
            &lt;lightning-card title="Parent Component">
                &lt;c-child-component message={parentMessage}>&lt;/c-child-component>
            &lt;/lightning-card>
        &lt;/template>
        </code></div>  
        <em> // helloWorld.js </em>
        <div><code>
        // parentComponent.js
        import { LightningElement } from 'lwc';

        export default class ParentComponent extends LightningElement {
            parentMessage = 'Hello from Parent!';

            <em> // You can set the initial value of parentMessage here or dynamically update it. </em>
        }
        </code></div>
        <div><code>
        &lt;!-- childComponent.html -->
        &lt;template>
            &lt;lightning-card title="Child Component">
                &lt;p>{message}&lt;/p>
            &lt;/lightning-card>
        &lt;/template>
        </code></div>
        <code><div>
        // childComponent.js
        import { LightningElement, api } from 'lwc';

        export default class ChildComponent extends LightningElement {
            @api message;
        }
        </code></div>
        <em>
          // The parent component (parentComponent) defines a property called parentMessage and sets its initial value to 'Hello from Parent!'. This property is passed to the child component using the message attribute.
          // The child component (childComponent) uses the @api decorator to define an attribute called message. This attribute receives the value from the parent component and displays it in the child component's template.
          // When you include the parent component in your Lightning App, it will render the child component with the message sent from the parent component. This demonstrates how data can be sent from a parent to a child component in LWC using component attributes.
        </em>
      </pre>
    </div>
    
  </section>

  <script src="examples.js"></script>

</body>

</html>
