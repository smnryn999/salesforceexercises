<!DOCTYPE html>
<html lang="tr">

<head>
  <meta charset="UTF-8">
  <title>The Project Summary</title>
  <link rel="stylesheet" href="../test.css">
</head>

<body>
  <header>
    <h1>The Project Summary</h1>
  </header>

  <section>

    <!-- EXAMPLE 1 -->
    <div class="example">
      <p><span class="counter"></span> - What is the project? </p>
      <button class="showSolution">Show Solution</button>
      <pre>
        <span class="string">
        • We will create an application where we will bring the data of movies, TV series and books from an external database and save it to a developer edition org.
        • This is just a practise about Data Modeling, App Builder, Integration, Scheduleable Apex and LWC. You can adapt the processes here to many topics in the Salesforce CRM.

        • First, we will create the necessary app, objects, fields and lightning pages.
        • Then we will create the classes we will use to fetch the data. We will use omdb and openlibrary as databases.
        • Then we will create the Schedulable Class required for the update every month.
        • Next, we will create Lightning Web components.
        </span>
      </pre>
    </div>

    <!-- EXAMPLE 2 -->
    <div class="example">
      <p><span class="counter"></span> - What objects will we use? </p>
      <button class="showSolution">Show Solution</button>
      <pre>
        <span class="string">        
        • Movies
            - Title (Text)
            - Genre (Multiselect Picklist)
            - Writer (Text)
            - Director (Text)
            - Actors (Text)
            - Released (Date)
            - IMDB Rating (Number)
            - Story (Long Text Area)
        
        • TV Series
            - Title (Text)
            - Genre (Multiselect Picklist)
            - Writer (Text)
            - Director (Text)
            - Actors (Text)
            - Released (Date)
            - Year (Text)
            - IMDB Rating (Number)
            - Story (Long Text Area)
        
        • Books
            - Book Name (Text)
            - Author (Text)
            - Number Of Pages (Number)
            - Language (Text)
            - First Publish Year (Text)
            - Fictitious Characters (Text(255))
            - When the Story Takes Place (Text)
            - Rating (Number)

        • After adding the objects to the App we created, we set the locations of the fields on the pages via App Builder.
        </span>
      </pre>
    </div>

  </section>

  <script src="examples.js"></script>

</body>

</html>
